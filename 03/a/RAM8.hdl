// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,sel=address,a=ma,b=mb,c=mc,d=md,e=me,f=mf,g=mg,h=mh);
	Register(in=in,load=ma,out=r0);
	Register(in=in,load=mb,out=r1);
	Register(in=in,load=mc,out=r2);
	Register(in=in,load=md,out=r3);	
	Register(in=in,load=me,out=r4);
	Register(in=in,load=mf,out=r5);	
	Register(in=in,load=mg,out=r6);
	Register(in=in,load=mh,out=r7);
	Mux8Way16(a=r0,b=r1,c=r2,d=r3,e=r4,f=r5,g=r6,h=r7,sel=address,out=out);
}
